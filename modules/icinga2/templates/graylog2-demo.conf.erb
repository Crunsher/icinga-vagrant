/*
 * This is our Graylog & Icinga 2 OSMC demo.
 *
 * Requires:
 *   * 'icinga2 feature enable gelf'
 *   * check-graylog-stream plugin
 */

template Service "graylog-service" {
  check_interval = 1s
  retry_interval = 1s
  max_check_attempts = 3
  enable_flapping = false
  enable_notifications = true
}

const GraylogAddress = "192.168.33.6"
const GraylogWebUrl = "http://" + GraylogAddress + ":9000"
const GraylogApiUrl = GraylogWebUrl + "/api"
const GraylogPluginDir = "/usr/lib/nagios/plugins"

/*
 * 1.) Query Graylog alert streams
 */

/* generic check command */
object CheckCommand "graylog2-stream" {
  import "plugin-check-command"

  command = [ GraylogPluginDir + "/check-graylog2-stream-wrapper" ]

  arguments = {
    "-user" = "$graylog2_api_username$"
    "-password" = "$graylog2_api_password$"
    "-url" = "$graylog2_api_url$"
  }

  // default values
  vars.graylog2_api_url = GraylogApiUrl
  vars.graylog2_api_username = "admin"
  vars.graylog2_api_password = "admin"
}


/* a sample host for our demo */
object Host "graylog-host" {
  address = "127.0.0.1"
  check_command = "hostalive"

  vars.streams["icinga2"] = {
    graylog2_stream_id = "54610d26e4b059482bbfab0f"
  }

  vars.random = [ 1, 2, 3, 4, 5]

  vars.notification_groups = [ "osmc" ]
}


apply Service "alert-" for (stream => config in host.vars.streams) {
  import "graylog-service"

  check_command = "graylog2-stream"

  vars += config

  notes = "Our " + stream + " Graylog alert stream checker."
  notes_url = GraylogWebUrl

  assign where host.vars.streams
}


/*
 * 2.) Receive Graylog alert triggers via passive check result
 */


/*
 * 3.) Send random check results through the GelfWriter feature
 * we can filter on.
 */

apply Service "graylog-random-00" for (check in host.vars.random) {
  import "graylog-service"

  check_command = "random"

  assign where host.vars.random
}

/*
 * 4.) Trigger notification events for GelfWriter feature
 */

object User "osmc-graylog" {
  email = "icinga@localhost"
}

object UserGroup "osmc" {
  display_name = "OSMC Notification Group"
  assign where match("osmc-*", user.name)
}

apply Notification "notify-service-graylog" to Service {

  command = "extended-graylog-notification"

  //notify more often - only for demo purposes
  interval = 1m

  //don't define any states or types - we want them all for our demo

  //use the groups array defined on the host
  user_groups = host.vars.notification_groups

  assign where host.vars.streams && host.vars.streams.contains("icinga2")
  ignore where host.name == "localhost"
}

object NotificationCommand "extended-graylog-notification" {
  import "plugin-notification-command"

  command = "/bin/echo \"Here comes our fancy graylog notification with stream url '$service.notes_url$'\""
}


