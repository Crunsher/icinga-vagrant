/*
 * Service apply rules.
 *
 * The CheckCommand objects `ping4`, `ping6`, etc
 * are provided by the plugin check command templates.
 * Check the documentation for details.
 *
 * Tip: Use `icinga2 object list --type Service` to
 * list all service objects after running
 * configuration validation (`icinga2 daemon -C`).
 */

/*
 * This is an example host based on your
 * local host's FQDN. Specify the NodeName
 * constant in `constants.conf` or use your
 * own description, e.g. "db-host-1".
 */

/*
 * These are generic `ping4` and `ping6`
 * checks applied to all hosts having the
 * `address` resp. `address6` attribute
 * defined.
 */
apply Service "cluster-ping4" {
  import "generic-service"

  check_command = "ping4"
  groups = [ "disk" ]

  assign where host.address
}

apply Service "cluster-ping6" {
  import "generic-service"

  check_command = "ping6"

  assign where host.address6
}

/*
 * Apply the `ssh` service to all hosts
 * with the `address` attribute defined and
 * the custom attribute `os` set to `Linux`.
 */
apply Service "cluster-ssh" {
  check_command = "ssh"

  assign where host.address && host.vars.os == "Linux"
  ignore where host.name == "localhost" /* for upgrade safety */
}



apply Service "cluster-" for (http_vhost => config in host.vars.http_vhosts) {
  check_command = "http"

  vars += config

  assign where host.vars.http_vhosts
}

apply Service "cluster-" for (disk => config in host.vars.disks) {
  check_command = "disk"

  vars += config

  assign where host.vars.disks
}

apply Service "cluster-icinga" {
  check_command = "icinga"

  assign where host.name == NodeName
}

apply Service "cluster-load" {
  check_command = "load"
  check_interval = 1s
  retry_interval = 1s

  assign where host.name == NodeName
}

apply Service "cluster-procs" {
  check_command = "procs"

  assign where host.name == NodeName
}

apply Service "cluster-swap" {
  check_command = "swap"

  assign where host.name == NodeName
}

apply Service "cluster-users" {
  check_command = "users"

  assign where host.name == NodeName
}



