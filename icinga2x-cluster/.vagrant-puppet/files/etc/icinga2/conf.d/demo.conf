
/*
 * CheckCommands
 */

object CheckCommand "icinga-random-check" {
        methods = {
                execute = "RandomCheck"
        }
}

object CheckCommand "simple-uptime" {
  import "plugin-check-command",
  command = "echo `uptime` && exit 0"
}

object CheckCommand "mysql" {
  import "plugin-check-command",
  command = [
          "$plugindir$/check_mysql",
          "-H", "$address$",
          "-d", "$database$",
          "-u", "$username$",
          "-p", "$password$"
  ],

  macros = {
    database = "icinga",
    username = "icinga",
    password = "icinga"
  }
}

object CheckCommand "pgsql" {
  import "plugin-check-command",
  command = [
          "$plugindir$/check_pgsql",
          "-H", "$address$",
          "-d", "$database$",
          "-l", "$username$",
          "-p", "$password$"
  ],

  macros = {
    database = "icinga",
    username = "icinga",
    password = "icinga"
  }
}

object CheckCommand "dns" {
  import "plugin-check-command",
  command = [
          "$plugindir$/check_dns",
          "-H", "$domain$",
          "-s", "$address$" 
  ]
}

object CheckCommand "mail" {
  import "plugin-check-command",
  command = [
          "$plugindir$/check_mailq",
          "-w", "$warn$",
          "-c", "$crit$"
  ],
  macros = {
    warn = 5,
    crit = 25
  }
}

object CheckCommand "ldap" {
  import "plugin-check-command",
  command = [
          "$plugindir$/check_ldap",
          "-H", "$address$",
          "-b", "$basedn$"
  ],
  macros = {
    basedn = "dc=icinga,dc=org"
  }
}

object CheckCommand "snmp-interface" {
  import "plugin-check-command",
  command = [
          "$plugindir$/check_snmp_int.pl",
          "-H", "$address$",
          "-C", "$community$",
          "-$version$",
          "-n", "$interface$",
          "-k", "-f",
          "-w", "$inputwarn$,$outputwarn$",
          "-c", "$inputcrit$,$outputcrit$",
  ],
  macros = {
    community = "public",
    version = 2,
    interface = "eth0",
    inputwarn = 200,
    outputwarn = 400,
    inputcrit = 0,
    outputcrit = 600
  }
}


/*
 * Service Groups
 */

object ServiceGroup "cluster" {
  display_name = "Cluster Checks"
}

object ServiceGroup "dns" {
  display_name = "DNS Checks"
}

object ServiceGroup "db" {
  display_name = "DB Checks"
}

object ServiceGroup "http" {
  display_name = "HTTP Checks"
}

object ServiceGroup "network" {
  display_name = "Network Checks"
}

object ServiceGroup "mail" {
  display_name = "Mail Checks"
}

object ServiceGroup "ping" {
  display_name = "Network Checks"
}

object ServiceGroup "ldap" {
  display_name = "LDAP Checks"
}

/*
 * Host Groups
 */

object HostGroup "network-device" {
  display_name = "Network Devices"
}

object HostGroup "database-server" {
  display_name = "Database Servers"
}

object HostGroup "mail-server" {
  display_name = "Mail Servers"
}

object HostGroup "web-server" {
  display_name = "Web Servers"
}

object HostGroup "ad-server" {
  display_name = "LDAP AD Server"
}

object HostGroup "dns-server" {
  display_name = "DNS Server"
}

object HostGroup "cluster-server" {
  display_name = "Cluster Server"
}

/*
 * Users
 */

object User "icinga-manager" {
  macros = {
    email = "icinga@localhost"
  },
  groups = [ "manager" ]
}

object UserGroup "manager" {
  display_name = "Icinga Manager"
}

/*
 * Templates
 */

template Service "random-check" {
  import "generic-service",
  check_command = "icinga-random-check",
  groups = [ "cluster" ]
}

template Service "generic-demo-service" {
  import "generic-service",
  check_command = "ping4"
}

/* generic-demo-host */

template Host "generic-demo-host" {
  import "generic-host",
  display_name = "demo-host",

  macros = {
    address = "127.0.0.1",
    address6 = "::1"
  },

  groups = [ "linux-server" ],

  check = "ping4"
}

/* applied by 'generic-host' already */
/*
apply Service "ping4" {
  import "generic-demo-service",
  groups = [ "ping" ],

  assign where "generic-demo-host" in host.templates
}
*/

/* mail-demo-host */

template Host "mail-demo-host" {
  import "generic-demo-host",
  groups = [ "mail-server" ],
}

apply Service "mail" {
  import "generic-demo-service",
  check_command = "mail",
  groups = [ "mail" ],

  assign where "mail-demo-host" in host.templates
}

/* mysql-demo-host */

template Host "mysql-demo-host" {
  import "generic-demo-host",
  groups = [ "database-server" ],
  check = "mysql"
}

apply Service "mysql" {
  import "generic-demo-service",
  check_command = "mysql",
  groups = [ "db" ],

  assign where "mysql-demo-host" in host.templates
}

/* pgsql-demo-host */

template Host "pgsql-demo-host" {
  import "generic-demo-host",
  groups = [ "database-server" ],
  check = "pgsql"
}

apply Service "postgresql" {
  import "generic-demo-service",
  check_command = "pgsql",
  groups = [ "db" ],

  assign where "pgsql-demo-host" in host.templates,
  ignore where host.name == "postgresql-c30-extern"
}

/* dns-demo-host */

template Host "dns-demo-host"{
  import "generic-demo-host",
  macros.address = "ns1.netways.de",

  groups = [ "dns-server" ],

  check = "dns netways.de"
}

apply Service "dns netways.de" {
  import "generic-demo-service",

  check_command = "dns",
  macros.domain = "netways.de",
  groups = [ "dns" ],

  assign where "dns-demo-host" in host.templates
}

apply Service "dns icinga.org" {
  import "generic-demo-service",

  check_command = "dns",
  macros.domain = "icinga.org",
  groups = [ "dns" ],

  assign where "dns-demo-host" in host.templates
}

apply Service "dns monitoringexchange.org" {
  import "generic-demo-service",

  check_command = "dns",
  macros.domain = "monitoringexchange.org",
  groups = [ "dns" ],

  assign where "dns-demo-host" in host.templates
}

/* http-icinga-host */

template Host "http-icinga-host" {
  import "generic-demo-host",
  macros.address = "web.icinga.org",
  groups = [ "web-server" ],
  check = "ping4"
}

apply Service "http www.icinga.org" {
  import "generic-demo-service",
  check_command = "http_vhost",
  macros.vhost = "www.icinga.org",
  groups = [ "http" ],

  assign where "http-demo-host" in host.templates
}

apply Service "http wiki.icinga.org" {
  import "generic-demo-service",
  check_command = "http_vhost",
  macros.vhost = "wiki.icinga.org",
  groups = [ "http" ],

  assign where "http-demo-host" in host.templates
}

apply Service "http docs.icinga.org" {
  import "generic-demo-service",
  check_command = "http_vhost",
  macros.vhost = "docs.icinga.org",
  groups = [ "http" ],

  assign where "http-demo-host" in host.templates
}

apply Service "http dev.icinga.org" {
  import "generic-demo-service",
  check_command = "http_vhost",
  macros.vhost = "dev.icinga.org",
  groups = [ "http" ],

  assign where "http-demo-host" in host.templates
}

/* ldap-icinga-demo-host */

template Host "ldap-icinga-demo-host" {
  import "generic-demo-host",
  groups = [ "ad-server" ],
  check = "ldap"
}

apply Service "icingaweb-ad" {
  import "generic-demo-service",
  display_name = "Icinga Web AD",
  check_command = "ldap",
  groups = [ "ldap" ],

  assign where "ldap-icinga-demo-host" in host.templates
}

template Host "router-demo-host" {
  import "generic-demo-host",
  groups = [ "network-device" ],
  check = "uptime"
}

apply Service "uptime" {
  import "generic-demo-service",
  display_name = "Uptime",
  check_command = "simple-uptime",
  groups = [ "network" ],

  assign where "router-demo-host" in host.templates
}


/*
 * Sample DNS Hosts
 */

object Host "dns-master" {
  import "dns-demo-host",
  display_name = "DNS Master"
}

/*
 * Sample Mail Hosts
 */

object Host "mail-c1" {
  import "mail-demo-host",
  display_name = "Mail C1"
}

/*
 * Sample DB Hosts
 */

object Host "mysql-c1" {
  import "mysql-demo-host",
  display_name = "MySQL C10"
}

object Host "mysql-c12-extern" {
  import "mysql-demo-host",
  display_name = "MySQL C12 Extern",
  macros = {
    address = "192.168.255.255"
  }
}

object Host "postgresql-c20" {
  import "pgsql-demo-host",
  display_name = "PostgreSQL C20"
}

object Host "postgresql-c30-extern" {
  import "pgsql-demo-host",
  display_name = "PostgreSQL C30 Extern",
}

apply Service "postgresql" {
  import "generic-demo-service",
  check_command = "pgsql",
  macros.database = "template1",
  macros.username = "remote-role",
  macros.password = "remote-pass",
  groups = [ "db" ],

  assign where host.name == "postgresql-c30-extern"
}

/*
 * Sample Webserver Hosts
 */

object Host "web.icinga.org" {
  import "http-icinga-host",
  display_name = "Icinga Webserver",
}

/*
 * Sample LDAP Hosts
 */

object Host "ldap-server" {
  import "ldap-icinga-demo-host",
  display_name = "LDAP AD Server",
}


/*
 * Sample Network Hosts
 */

object Host "core-router" {
  import "router-demo-host",
  display_name = "Core Router",
}

object Host "backup-router" {
  import "router-demo-host",
  display_name = "Backup Router",
}

object Host "hp-procurve-switch" {
  import "router-demo-host",
  display_name = "HP Procurve Switch",
}

apply Service "if-errors" {
  import "generic-demo-service",
  display_name = "Interface Errors",
  check_command = "snmp-interface",
  authorities = [ "icinga2a" ],
  groups = [ "network" ],

  assign where host.name == "hp-procurve-switch"
}

apply Service "if-traffic-eth0" {
  import "generic-demo-service",
  display_name = "Interface Traffic eth1",
  check_command = "snmp-interface",
  macros.interface = "eth0",
  authorities = [ "icinga2a" ],
  groups = [ "network" ],

  assign where host.name == "hp-procurve-switch"
}

apply Service "if-traffic-eth1" {
  import "generic-demo-service",
  display_name = "Interface Errors",
  check_command = "snmp-interface",
  macros.interface = "eth1",
  authorities = [ "icinga2a" ],
  groups = [ "network" ],

  assign where host.name == "hp-procurve-switch"
}

/*
 * Random Host
 */

template Host "cluster-demo-host" {
  import "generic-host",
  display_name = "Icinga 2 Clustered Checks",
  custom = {
    notes = "Distributed Checks on Cluster Nodes. Verify Check Output / Source!"
  }
}

apply Service "random001" { import "random-check", assign where "cluster-demo-host" in host.templates }
apply Service "random002" { import "random-check", assign where "cluster-demo-host" in host.templates }
apply Service "random003" { import "random-check", assign where "cluster-demo-host" in host.templates }
apply Service "random004" { import "random-check", assign where "cluster-demo-host" in host.templates }
apply Service "random005" { import "random-check", assign where "cluster-demo-host" in host.templates }

object Host "icinga2-clustered-checks" { import "cluster-demo-host" }

